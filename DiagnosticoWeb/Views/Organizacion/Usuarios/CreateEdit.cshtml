@using System.Security.Claims
<div ng-app="SedeshuApp" ng-controller="createController" ng-init="init(@Model)">
    <partial name="_Loading_Partial" />
    <div ng-cloak>
        <div class="card border-cards">
            <div class="card-header bg-cards text-white">
                <h5 ng-if="usuario.Id == null" class="float-left">Crear usuario</h5>
                <h5 ng-if="usuario.Id != null" class="float-left">Editar usuario</h5>
                <a class="btn btn-sm btn-header float-right" asp-controller="Organizacion" asp-action="IndexUsuarios">
                    <i class="fa fa-backward"></i> Regresar
                </a>
            </div>
            <div class="card-body">
                <div class="d-flex flex-wrap">
                    <div class="col-4">
                        <label class="required">Nombre completo <small ng-bind="usuario.Name.length + ' / 100'"></small></label>
                        <input class="form-control" ng-model="usuario.Name" />
                        <strong class="small text-danger">{{ errors["Name"] }}</strong>
                    </div>
                    <div class="col-4">
                        <label class="required">Correo electrónico <small ng-bind="usuario.Email.length + ' / 100'"></small></label>
                        <input class="form-control" ng-model="usuario.Email" />
                        <strong class="small text-danger">{{ errors["Email"] }}</strong>
                    </div>
                    <div class="col-4">
                        <label class="required">Nombre de usuario <small ng-bind="usuario.UserName.length + ' / 50'"></small></label>
                        <input class="form-control" ng-model="usuario.UserName" />
                        <strong class="small text-danger">{{ errors["UserName"] }}</strong>
                    </div>
                    <div class="col-4">
                        <label class="required">Contraseña <small ng-bind="usuario.Password.length + ' / 50'"></small></label>
                        <input type="password" class="form-control" ng-model="usuario.Password" />
                        <strong class="small text-danger">{{ errors["Password"] }}</strong>
                    </div>
                    <div class="col-4">
                        <label class="required">Rol</label>
                        <select class="form-control selectpicker2" ng-model="usuario.Rol" data-title="Sin selección">
                            <option ng-repeat="rol in roles" ng-value="rol.NormalizedName">{{ rol.Name }}</option>
                        </select>
                        <strong class="small text-danger">{{ errors["Rol"] }}</strong>
                    </div>
                    <div class="col-4">
                        <label class="required">Perfil</label>
                        <select class="form-control selectpicker2" ng-model="usuario.Perfil" data-title="Sin selección">
                            <option ng-repeat="perfil in perfiles" ng-value="perfil.Id">{{ perfil.Nombre }}</option>
                        </select>
                        <strong class="small text-danger">{{ errors["Perfil"] }}</strong>
                    </div>
                    <div class="col-4" ng-if="usuario.Rol!='Administrador'">
                        <label class="required">Dependencia</label>
                        <select class="form-control selectpicker2" ng-model="usuario.Dependencia" data-title="Sin selección" ng-change="GetRegiones()">
                            <option ng-repeat="dependencia in dependencias" ng-value="dependencia.Id">{{ dependencia.Nombre }}</option>
                        </select>
                        <strong class="small text-danger">{{ errors["Dependencia"] }}</strong>
                    </div>
                </div>
                <hr>
                <span class="badge badge-info">Regiones</span>
                <br>
                <div class="d-flex flex-wrap">
                    <div class="col-sm-3 region" ng-repeat="region in regiones">
                        <div class="d-flex justify-content-between">
                            <div>
                                <input type="checkbox" id="{{region.Id}}" ng-model="region.Selected">
                                <label for="{{region.Id}}">{{region.Clave}}</label>
                            </div>
                            <button class="btn btn-sm btn-light" ng-click="MostrarRegion(region)" ng-if="region.Mostrar">
                                <i class="fa fa-arrow-up"></i>
                            </button>
                            <button class="btn btn-sm btn-light" ng-click="MostrarRegion(region)" ng-if="!region.Mostrar">
                                <i class="fa fa-arrow-down"></i>
                            </button>
                        </div>
                        <table class="table" ng-if="region.Mostrar">
                            <tr ng-repeat="municipio in region.MunicipioZonas">
                                <td>{{municipio.Municipio.Nombre}}</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            @if (((ClaimsIdentity)User.Identity).HasClaim("Permiso", "usuarios.editar") || 
                            ((ClaimsIdentity)User.Identity).HasClaim("Permiso", "usuarios.crear"))
            {
                <div class="card-footer">
                    <div class="d-flex justify-content-between">
                        <div>
                            <button class="btn btn-sm btn-success" ng-click="Guardar()" ng-if="!guardando">
                                <i class="fa fa-save"></i> Guardar
                            </button>
                            <button class="btn btn-sm btn-success" disabled ng-if="guardando">
                                <i class="fa fa-spinner fa-spin"></i> Guardar
                            </button>
                        </div>
                        <div ng-if="usuario.Id != null && !usuario.IsDisabled">
                            <button class="btn btn-sm btn-danger" ng-click="mostrarModal()">
                                <i class="fa fa-ban"></i> Inhabilitar
                            </button>
                        </div>
                        <div ng-if="usuario.Id != null && usuario.IsDisabled">
                            <button class="btn btn-sm btn-success" ng-click="mostrarModal()">
                                <i class="fa fa-check"></i> Habilitar
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <script type="text/ng-template" id="myModalContent">
        <div class="modal-header">
            <h5 class="modal-title" id="modal-title">Inhabilitación de usuario</h5>
        </div>
        <div class="modal-body" id="modal-body">
            <div class="row">
                <div class="col-sm-12">
                    <label>¿Está seguro de querer {{$conf.usuario.IsDisabled ? 'habilitar' : 'inhabilitar'}} al usuario {{$conf.usuario.nombre}}?</label>                
                </div>                                
            </div>            
        </div>
        <div class="modal-footer" style="padding-top: 5px; padding-bottom: 5px;">
            <div>
                <button class="btn btn-sm btn-light" type="button" ng-click="$conf.cancelar()">Cancelar</button>
            </div>
            <div ng-if="!$conf.usuario.IsDisabled">
                <button class="btn btn-sm btn-danger" type="button" ng-click="$conf.cambiar(false)" ng-if="!$conf.cargando">
                    <i class="fa fa-ban"></i> Inhabilitar
                </button>
                <button class="btn btn-sm btn-danger" type="button" ng-if="$conf.cargando" disabled>
                    <i class="fa fa-spinner fa-spin"></i> Inhabilitar
                </button>                        
            </div>
            <div ng-if="$conf.usuario.IsDisabled">
                <button class="btn btn-sm btn-success" type="button" ng-click="$conf.cambiar(true)" ng-if="!$conf.cargando">
                    <i class="fa fa-check"></i> Habilitar
                </button>
                <button class="btn btn-sm btn-success" type="button" ng-if="$conf.cargando" disabled>
                    <i class="fa fa-spinner fa-spin"></i> Habilitar
                </button>            
            </div>
        </div>
    </script>    
</div>

@section Scripts {
    <script>
        (function () {
            var app = angular.module('SedeshuApp', ['ui.bootstrap']);
            var baseUrl = document.baseURI;

            app.controller('createController',
                function ($scope, $http, $uibModal) {
                    $scope.usuario = {
                        Id: "",
                        Name: "",
                        UserName: "",
                        Password: "",
                        Email: "",
                        IsDependencia: "",
                        IsDisabled: false,
                        Dependencia: "",
                        Rol: "",
                        Perfil: "",
                        Codigo: "",
                        Regiones: []
                    };
                    $scope.errors = [];
                    $scope.dependencias = [];
                    $scope.roles = [];
                    $scope.perfiles = [];
                    $scope.regiones = [];
                    $scope.guardando = false;

                    $scope.init = function (usuario) {
                        $scope.usuario.Id = usuario.Id;
                        $scope.usuario.Name = usuario.Name;
                        $scope.usuario.UserName = usuario.UserName;
                        $scope.usuario.Email = usuario.Email;
                        $scope.usuario.Password = usuario.Password;
                        $scope.usuario.Dependencia = usuario.Dependencia;
                        $scope.usuario.Rol = usuario.Rol;
                        $scope.usuario.Perfil = usuario.Perfil;
                        $scope.usuario.Regiones = usuario.Regiones;
                        $scope.usuario.IsDependencia = usuario.IsDependencia;
                        $scope.usuario.IsDisabled = usuario.IsDisabled;
                        $scope.usuario.Codigo = usuario.Codigo;
                        
                        $scope.dependencias = usuario.Dependencias;
                        $scope.roles = usuario.Roles;
                        $scope.perfiles = usuario.Perfiles;
                        $scope.GetRegiones();
                        $scope.refreshSelect();
                    }

                    $scope.Guardar = function () {
                        $scope.guardando = true;
                        $scope.usuario.Regiones = [];
                        _.each($scope.regiones, function (region) {
                            if (region.Selected) {
                                $scope.usuario.Regiones.push(region.Id);
                            }
                        });
                        $scope.usuario.IsDependencia = $scope.usuario.Rol == 'Administrador' ? "false" : "true";
                        $http.post(baseUrl + 'Organizacion/GuardarUsuario', $scope.usuario).then(function (response) {
                            if (response.data === 'ok') {
                                window.location.href = baseUrl + 'Organizacion/IndexUsuarios';
                            } else {
                                $scope.cargarErrores(response.data);
                            }
                            $scope.guardando = false;
                        });
                    };

                    $scope.cargarErrores = function (errors) {
                        $scope.errors = [];
                        for (var i = 0; i < errors.length; i++) {
                            $scope.errors[errors[i].Key] = errors[i].Error;
                        }
                    };

                    $scope.GetRegiones = function () {
                        $http.get(baseUrl + 'Organizacion/GetRegiones/' + $scope.usuario.Dependencia).then(function (response) {
                            $scope.regiones = response.data;
                            _.each($scope.regiones, function (region) {
                                region.Mostrar = false;
                                region.Selected = _.find($scope.usuario.Regiones, function (r) {
                                    return r == region.Id
                                }) != null;
                            });
                        });
                    };

                    $scope.MostrarRegion = function (region) {
                        region.Mostrar = !region.Mostrar;
                    };

                    $scope.refreshSelect = _.debounce(function () {
                        $('.selectpicker2').selectpicker('refresh');
                    }, 200);

                    $scope.mostrarModal = function (size, parentSelector) {
                        var parentElem = parentSelector ?
                            angular.element($document[0].querySelector('#modal ' + parentSelector)) : undefined;
                        var modalInstance = $uibModal.open({
                            animation: $scope.animationsEnabled,
                            ariaLabelledBy: 'modal-title',
                            ariaDescribedBy: 'modal-body',
                            templateUrl: 'myModalContent',
                            size: size,
                            controller: 'modalController',
                            controllerAs: '$conf',
                            appendTo: parentElem,
                            resolve: {
                                usuario: function () { return $scope.usuario; },
                            }
                        });
                    };                                       
                }
            );
            
            app.controller('modalController',
                function ($scope, $http, $uibModalInstance, usuario) {
                    $conf = this;
                    $conf.usuario = usuario;
                    $conf.cargando = false;
    
                    $conf.cambiar = function (habilitar) {
                        $scope.cargando = true;
                        let url = baseUrl +'Organizacion/'+ (habilitar ? 'Habilitar':'Inhabilitar');
                        axios.post(url , $conf.usuario).then(function (response) {
                            if (response.data == "ok") {
                                window.location.href = baseUrl + 'Organizacion/IndexUsuarios';
                                $conf.cancelar();
                            } else {
                                $scope.cargarErrores(response.data);
                            }
                            $scope.cargando = false;
                            $scope.$apply();
                        });
                    }
    
                    $scope.cargarErrores = function (errors) {
                        $scope.errors = [];
                        for (var i = 0; i < errors.length; i++) {
                            $scope.errors[errors[i].Key] = errors[i].Error;
                        }
                    };
    
                    $conf.cancelar = function () {
                        $uibModalInstance.close();
                    }
                }
            );
        })();
    </script>
}
@section Styles
    {
    <style>
        .region {
            border: 1px solid #dadada;
            margin: 5px;
            padding: 10px;
            max-height: 250px;
            overflow-y: auto;
        }
    </style>
}
