@using DiagnosticoWeb.Code
@using System.Security.Claims
<div ng-app="SedeshuApp" ng-controller="createController" ng-init="init(@JsonSedeshu.SerializeObject(Model))">
    <partial name="_Loading_Partial" />
    <slot ng-cloak>
        <div class="card">
            <div class="card-header bg-cards text-white d-flex justify-content-between">
                @if (string.IsNullOrEmpty(Model.Id))
                {
                    <h5>Crear categoría</h5>
                }
                else
                {
                    <h5>Editar categoría</h5>
                }
                <a class="btn btn-sm btn-header" asp-controller="Categoria" asp-action="Index">
                    <i class="fa fa-backward"></i> Regresar
                </a>
            </div>
            <div class="card-body">
                <div class="d-flex flex-wrap">
                    <div class="col-4">
                        <label class="required">Id <small>{{ Categoria.Id.length }} / 10</small></label>
                        <input class="form-control" ng-model="Categoria.Id" maxlength="10" ng-disabled="Categoria.IdAnterior != ''"/>
                        <span class="text-danger small">{{ errors["Id"] }}</span>
                    </div>
                    <div class="col-4">
                        <label class="required">Nombre <small>{{ Categoria.Nombre.length }} / 255</small></label>
                        <input class="form-control" ng-model="Categoria.Nombre" maxlength="255" />
                        <span class="text-danger small">{{ errors["Nombre"] }}</span>
                    </div>
                    <div class="col-4">
                        <label class="required">Clave <small>{{ Categoria.Clave.length }} / 20</small></label>
                        <input class="form-control" ng-model="Categoria.Clave" maxlength="20" />
                        <span class="text-danger small">{{ errors["Nombre"] }}</span>
                    </div>
                    <div class="col-4">
                        <label class="required">Color <small>{{ Categoria.Color.length }} / 20</small></label>
                        <br>
                        <spectrum-colorpicker
                            ng-model="Categoria.Color"
                            format="'hex'"
                            options="{
                            showInput: true,                           
                            allowEmpty: true,
                            showPalette: true,
                            palette: [['black', 'white', 'blanchedalmond'],['rgb(255, 128, 0);', 'hsv 100 70 50', 'lightyellow']]
                          }">
                        </spectrum-colorpicker>
                    </div>
                    <div class="col-4">
                        <label>Categoría padre </label>
                        <select class="selectpicker2" ng-model="Categoria.PadreId" data-live-search="true">
                            <option ng-repeat="categoria in Categorias" ng-value="categoria.Id">{{categoria.Nombre}}</option>
                        </select>
                        <span class="text-danger small">{{ errors["PadreId"] }}</span>
                    </div>                    
                </div>
            </div>
            @if (((ClaimsIdentity)User.Identity).HasClaim("Permiso", "catalogos.editar") || (string.IsNullOrEmpty(Model.Id) &&
             ((ClaimsIdentity)User.Identity).HasClaim("Permiso", "catalogos.crear")))
            {
                <div class="card-footer">
                    <button class="btn btn-sm btn-success" ng-click="Guardar()" ng-if="!guardando">
                        <i class="fa fa-save"></i> Guardar
                    </button>
                    <button class="btn btn-sm btn-success" ng-if="guardando" disabled>
                        <i class="fa fa-spinner fa-spin"></i> Guardar
                    </button>
                </div>
            }
        </div>
    </slot>
</div>

@section Scripts {
    <script>
        (function () {
            var app = angular.module('SedeshuApp', ['ui.bootstrap','angularSpectrumColorpicker']);                       
            var baseUrl = document.baseURI;

            app.controller('createController',
                function ($scope, $http) {
                    $scope.Categoria = {
                        Id: "",
                        IdAnterior: "",
                        Nombre: "",
                        Clave: "",
                        Color: "",
                        PadreId: "",
                    };
                    $scope.Categorias = [];
                    $scope.guardando = false;

                    $scope.init = function (categoria) {                       
                        $scope.Categoria.Id = categoria.Id;
                        $scope.Categoria.IdAnterior = categoria.IdAnterior;
                        $scope.Categoria.Nombre = categoria.Nombre;
                        $scope.Categoria.Clave = categoria.Clave;
                        $scope.Categoria.Color = categoria.Color;                       
                        $scope.Categoria.PadreId = categoria.PadreId;       
                        $scope.Categorias = categoria.Categorias;
                        $scope.refreshSelect();
                    };

                    $scope.Guardar = function () {
                        $scope.guardando = true;
                        $http.post(baseUrl+'Categoria/Guardar', $scope.Categoria).then(function (response) {
                            if (response.data == "ok") {
                                window.location.href = baseUrl + 'Categoria';
                            } else {
                                $scope.cargarErrores(response.data);
                            }
                            $scope.guardando = false;
                        });
                    };

                    $scope.cargarErrores = function (errors) {
                        $scope.errors = [];
                        for (var i = 0; i < errors.length; i++) {
                            $scope.errors[errors[i].Key] = errors[i].Error;
                        }
                    };

                    $scope.refreshSelect = _.debounce(function () {
                        $('.selectpicker2').selectpicker('refresh');
                    }, 200);                    
                })
        })();
    </script>
}