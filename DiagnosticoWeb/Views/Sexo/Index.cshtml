@{
    ViewData["Title"] = "Generos";
}
@using DiagnosticoWeb.Code
@using System.Security.Claims
<div ng-app="SedeshuApp" ng-controller="indexController" ng-init="init(@JsonSedeshu.SerializeObject(Model))">
    <partial name="_Loading_Partial" />
    <div ng-cloak>
        <div class="card border-cards">
            <div class="card-header bg-cards text-white">
                <div class="d-flex justify-content-between">
                    <h5>Generos</h5>
                    <div class="d-flex justify-content-between">
                        @if (((ClaimsIdentity)User.Identity).HasClaim("Permiso", "catalogos.exportar"))
                        {
                            <button type="button" class="btn btn-sm btn-header" ng-click="exportar()">
                                <i class="fa fa-file-excel"></i> Exportar
                            </button>
                        }
                        @if (((ClaimsIdentity)User.Identity).HasClaim("Permiso", "catalogos.importar"))
                        {
                            <button type="button" class="btn btn-sm btn-header" ng-click="showModal()">
                                <i class="fa fa-file-upload"></i> Importar
                            </button>
                        }
                        @if (((ClaimsIdentity)User.Identity).HasClaim("Permiso", "catalogos.crear"))
                        {
                            <a class="btn btn-sm btn-header" asp-controller="Sexo" asp-action="CreateEdit">
                                <i class="fa fa-plus"></i> Crear
                            </a>
                        }
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="d-flex">
                    <div class="col-3">
                        <label>Nombre</label>
                        <input class="form-control" ng-model="filtros.Nombre" ng-keyup="$event.keyCode == 13 ? getSexos() : null" />
                    </div>
                    <div class="col-2">
                        <label class="col-12">&nbsp;</label>
                        <button class="btn btn-info" ng-click="getSexos()" ng-if="!cargando">
                            <i class="fa fa-search"></i> Buscar
                        </button>
                        <button class="btn btn-info" ng-if="cargando">
                            <i class="fa fa-spinner fa-spin"></i>
                        </button>
                        <form id="exportar" asp-controller="Sexo" asp-action="Exportar" method="post">
                            <input id="Clave" name="Clave" type="hidden">
                            <input id="Nombre" name="Nombre" type="hidden">
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="card border-cards">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                        <tr>
                            <th>Clave</th>
                            <th>Género</th>
                            <th class="no-stretch"></th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr ng-repeat="sexo in sexos">
                            <td>{{ sexo.Id }}</td>
                            <td>{{ sexo.Nombre }}</td>
                            <td>
                                @if (((ClaimsIdentity) User.Identity).HasClaim("Permiso", "catalogos.editar"))
                                {
                                    <a class="btn btn-sm btn-info lineal" href="@Url.Action(action: "CreateEdit", controller: "Sexo")/{{sexo.Id}}">
                                        <i class="fa fa-edit"></i> Editar
                                    </a>
                                }
                                else
                                {
                                    <a class="btn btn-sm btn-info lineal" href="@Url.Action(action: "CreateEdit", controller: "Sexo")/{{sexo.Id}}">
                                        <i class="fa fa-eye"></i> Ver
                                    </a>
                                }
                            </td>
                        </tr>
                        <tr ng-if="sexos.length == 0">
                            <td colspan="3">No hay datos para mostrar.</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
                <div class="col-sm-12" style="text-align: center;" ng-if="cargando">
                    <i class="fa fa-spinner fa-spin"></i>
                </div>
                <div class="d-flex justify-content-between">
                    <span class="small">{{(filtros.Usuario==null?'':filtros.Usuario)+" "+(ImportedAt==null?'':ImportedAt)}}</span>
                    <ul uib-pagination total-items="totalcount" ng-change="pagechanged()"
                        items-per-page="filtros.pageSize" direction-links="false" ng-model="filtros.pageIndex" role="menu"
                        max-size="maxsize" class="pagination-sm" boundary-links="true" rotate="true"
                        num-pages="numPages" style="margin-bottom: 0px !important"></ul>
                </div>
            </div>
        </div>
    </div>

    <script type="text/ng-template" id="myModalContent">
        <div class="modal-header">
            <h5 class="modal-title" id="modal-title">Importación de generos</h5>
        </div>
        <div class="modal-body" id="modal-body">
            <div class="row">
                <div class="col-sm-12">
                    <label>Archivo (xlsx).</label>
                    <button class="btn btn-sm btn-primary" onclick="$('#file').click();">
                        <i class="fa fa-file-upload"></i> Seleccionar archivo
                    </button>
                </div>
                <div class="col-sm-12">
                    <span class="text-danger small" style="width: 100%;">{{ errors["File"] }}</span>
                </div>
                <div class="col-sm-12 mt-3 mb-3" ng-if="file != '' && file != null" ng-cloak>
                    <span class="file-span" ng-if="file.name.split('.')[file.name.split('.').length - 1] == 'xlsx'">
                        <i class="fa fa-file-excel text-success"></i> {{ file.name }}
                    </span>
                    <span class="file-span-red" ng-if="file.name.split('.')[file.name.split('.').length - 1] != 'xlsx'">{{ file.name }}</span>
                </div>
            </div>
            <input type="file" id="file" fileread="file" name="file" style="display: none;" />
        </div>
        <div class="modal-footer" style="padding-top: 5px; padding-bottom: 5px;">
            <button class="btn btn-sm btn-light" type="button" ng-click="$conf.cancelar()">Cancelar</button>
            <button class="btn btn-sm btn-primary" type="button" ng-click="$conf.importar()" ng-if="!$conf.guardando">
                <i class="fa fa-file-upload"></i> Importar
            </button>
            <button class="btn btn-sm btn-primary" type="button" ng-if="$conf.guardando" disabled>
                <i class="fa fa-spinner fa-spin"></i> Importar
            </button>
        </div>
    </script>
</div>

@section Scripts{
    <script>
        (function () {
            var modalInstance = null;
            var app = angular.module('SedeshuApp', ['ui.bootstrap']);
            var baseUrl = document.baseURI;

            app.controller('indexController',
                function ($scope, $http, $uibModal) {
                    $scope.file = "";
                    $scope.sexos = [];
                    $scope.animationsEnabled = true;
                    $scope.errors = [];
                    //Paginacion
                    $scope.maxsize = 5;
                    $scope.totalcount = 0;
                    $scope.numPages = 0;
                    $scope.cargando = false;
                    $scope.ImportedAt = "";

                    $scope.filtros = {
                        Clave: "",
                        Nombre: "",
                        Usuario: "",
                        pageIndex: 1,
                        pageSize: 10
                    }

                    $scope.init = function (filtros) {
                        $scope.filtros.Clave = filtros.Clave;
                        $scope.filtros.Nombre = filtros.Nombre;
                        $scope.ImportedAt = filtros.ImportedAt;
                        $scope.filtros.Usuario = filtros.Usuario;
                    }

                    $scope.getSexos = function () {
                        $scope.cargando = true;
                        $http.post(baseUrl + 'Sexo/GetSexos/', $scope.filtros).then(function (response) {
                            $scope.cargando = false;
                            $scope.sexos = response.data.Sexos;
                            $scope.totalcount = response.data.Total;
                        });
                    }

                    $scope.pagechanged = function () {
                        $scope.getSexos();
                    };
                    $scope.getSexos();
                    $scope.exportar = function () {
                        document.getElementById("Nombre").value = $scope.filtros.Nombre == null ? '' : $scope.filtros.Nombre;
                        document.getElementById("Clave").value = $scope.filtros.Clave == null ? '' : $scope.filtros.Clave;
                        document.getElementById("exportar").submit();
                    };
                    $scope.showModal = function (size, parentSelector) {
                        var parentElem = parentSelector ?
                            angular.element($document[0].querySelector('#modal ' + parentSelector)) : undefined;
                        var modalInstance = $uibModal.open({
                            animation: $scope.animationsEnabled,
                            ariaLabelledBy: 'modal-title',
                            ariaDescribedBy: 'modal-body',
                            templateUrl: 'myModalContent',
                            size: size,
                            controller: 'modalController',
                            controllerAs: '$conf',
                            appendTo: parentElem,
                        });

                        modalInstance.result.then(function () {
                            $scope.getSexos();
                        }, function () { });
                    }
                }
            ).directive("fileread", [function () {
                return {
                    scope: {
                        fileread: "="
                    },
                    link: function (scope, element, attributes) {
                        element.bind("change", function (changeEvent) {
                            scope.$apply(function () {
                                if (changeEvent.target.files[0] != undefined) {
                                    scope.fileread = changeEvent.target.files[0];
                                }
                            });
                        });
                    }
                }
            }]);

            app.controller('modalController',
                function ($scope, $http, $uibModalInstance) {
                    $conf = this;
                    $conf.guardando = false;

                    $conf.importar = function () {
                        $conf.guardando = true;
                        var fm = new FormData();
                        fm.append("File", $scope.file);
                        axios.post(baseUrl + 'Sexo/Importar/', fm).then(function (response) {
                            if (response.data == "ok") {
                                window.location.href = baseUrl + 'Sexo';
                                $conf.cancelar();
                            } else {
                                $scope.cargarErrores(response.data);
                            }
                            $conf.guardando = false;
                            $scope.$apply();
                        });
                    }

                    $scope.cargarErrores = function (errors) {
                        $scope.errors = [];
                        for (var i = 0; i < errors.length; i++) {
                            $scope.errors[errors[i].Key] = errors[i].Error;
                        }
                    };

                    $conf.cancelar = function () {
                        $uibModalInstance.close();
                    }
                }
            );
        })();
    </script>
}