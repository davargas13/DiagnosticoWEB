@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@using DiagnosticoWeb.Code
@{
    ViewData["Title"] = "Solicitudes";
}

<div ng-app="SedeshuApp" ng-controller="indexController" ng-init="init(@JsonSedeshu.SerializeObject(Model))">
    <partial name="_Loading_Partial" />
    <div ng-cloak>
        <div class="card border-cards">
            <div class="card-header bg-cards text-white">
                <h5>Solicitudes</h5>
            </div>
            <div class="card-body">
                <div class="d-flex flex-wrap">
                    <div class="col-4">
                        <label>Campos</label>
                        <select multiple class="selectpicker2 form-control" ng-change="seleccionarFiltro()" ng-model="selected" data-title="Campos">
                            <optgroup ng-repeat="(index, filtro) in filtros" label="{{index}}">
                                <option ng-repeat="valor in filtro" ng-value="valor.Key">{{corregirFiltro(valor.Key)}}</option>
                            </optgroup>
                        </select>
                    </div>
                    <div class="col-4">
                        <label>Período</label>
                        <br>
                        <div class="d-flex">
                            <input type="date" ng-model="Inicio" placeholder="yyyy-MM-dd" class="form-control filtro"/>
                            <span class="al filtro">Al</span>
                            <input type="date" ng-model="Fin" placeholder="yyyy-MM-dd" class="form-control filtro"/>
                        </div>
                    </div>
                    <div class="col-4" ng-repeat="(icatalogo, catalogo) in catalogos" ng-if="catalogo.Mostrar">
                        <label>{{corregirFiltro(icatalogo)}}</label>
                        <select class="selectpicker2 form-control" ng-if="catalogo.Multiple" ng-model="valores[icatalogo]" ng-change="seleccionarValor(icatalogo)" 
                                data-live-search="true" data-title="Seleccione">
                            <option ng-repeat="valor in catalogo.Items" ng-value="valor.Id">{{valor.Nombre}}</option>
                        </select>
                        <input class="form-control" ng-if="!catalogo.Multiple" ng-model="valores[icatalogo]">
                    </div>                    
                    <div class="col-12">
                        <button class="btn btn-info" ng-click="cargarSolicitudes()" ng-if="!loading">
                            <i class="fa fa-search"></i> Buscar
                        </button>
                        <button class="btn btn-info" ng-if="loading">
                            <i class="fa fa-spinner fa-spin"></i> Buscar
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="card border-cards">
            <div class="card-body">
                <div id="map"></div>
                <div>
                    {{totalcount}} de {{granTotal}}
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=@Configuration["GoogleApi:ApiKey2"]"></script>
    </script>
    <script>
        (function () {
            var app = angular.module('SedeshuApp', ['ui.bootstrap']);
            var baseUrl = document.baseURI;
            
            app.controller('indexController',
                function ($scope, $http, $uibModal) {
                
                    $scope.selected=[];
                    $scope.totalcount = 0;
                    $scope.granTotal = 0;                                                                              
                    $scope.solicitudes = [];                   
                    $scope.Inicio = '';
                    $scope.Fin = '';
                    $scope.loading = false;
                    $scope.filtros = {};
                    $scope.catalogos = {};
                    $scope.valores = {};                    
                    $scope.cluster = null;
                    $scope.map = null;
                    $scope.markers = [];
                    
                    $scope.init = function(model){
                        $scope.Inicio =new Date(model.Inicio.substring(0,4), parseInt(model.Inicio.substring(5,7))-1, model.Inicio.substring(8,10))
                        $scope.Fin = new Date(model.Fin.substring(0,4), parseInt(model.Fin.substring(5,7))-1, model.Fin.substring(8,10))
                        $scope.cargarSolicitudes();
                        $scope.cargarFiltros();                        
                        let uluru = {lat: 21.0676524, lng: -101.2601372};
                        $scope.map = new google.maps.Map(
                            document.getElementById('map'), {zoom: 10, center: uluru});
                    };
                    
                    $scope.corregirFiltro= function(filtro){
                        return _.startCase(filtro=='ApellidoPaterno'?'PrimerApellido':(filtro=='ApellidoMaterno'?'SegundoApellido':filtro));                      
                    };
                    
                    $scope.cargarFiltros = function(){                        
                        axios.get(baseUrl +'Solicitudes/BuildFiltros').then(function(response) {
                            $scope.filtros = response.data.Filtros;
                            _.each(response.data.Filtros, function(categoria) {
                                _.each(categoria, function(filtro) {
                                    $scope.catalogos[filtro.Key.replace(/ /g,"")] = {Items:[], Mostrar:false, Multiple:filtro.Value};                                 
                                    $scope.valores[filtro.Key.replace(/ /g,"")] = null;                                    
                                })
                            });                            
                                                       
                            setTimeout(function() {
                                $scope.$apply(function() {                                    
                                    $scope.refreshSelect();
                                });

                            })
                        });
                    }                                       
                    
                    $scope.cargarCatalogo = function(catalogo){                       
                        let municipioId = ($scope.valores.Municipio==null||$scope.valores.Municipio=='')?'0':$scope.valores.Municipio;                        
                            let cat = $scope.catalogos[catalogo.replace(/ /g, "")];
                            if (cat.Multiple){
                                if (cat.Items.length == 0||catalogo=='Localidad'||catalogo=='Ageb'){
                                    axios.get(baseUrl + 'Solicitudes/BuildCatalogos/' + catalogo.split(".-")[0] + '/' + municipioId).then(function (response) {
                                        setTimeout(function() {
                                           $scope.$apply(function() {
                                                cat.Items = response.data;                                        
                                               $scope.refreshSelect();
                                           });
                                       })
                                    });                                   
                                }else{
                                    setTimeout(function() {
                                        $scope.$apply(function() {                                                                                
                                            $scope.refreshSelect();
                                        });
                                    });
                                }
                            }
                            cat.Mostrar = true;                           
                    } 
                    
                    $scope.seleccionarFiltro = function() {
                        _.each($scope.filtros, function(filtro, index) {
                            _.each(filtro, function(f) {
                                if (_.find($scope.selected, function(selected) {                                    
                                    return selected==f.Key;
                                })==null){
                                    $scope.catalogos[f.Key.replace(/ /g,"")].Mostrar = false;
                                    $scope.valores[f.Key.replace(/ /g,"")]="";
                                }                                 
                            });                                                        
                        })
                        _.each($scope.selected, function(selected) {
                            $scope.cargarCatalogo(selected);                                                         
                        })                                                
                    }  
                    
                    $scope.seleccionarValor = function(catalogo){
                        if (catalogo=='Municipio'){
                            if ($scope.catalogos.Localidad.Mostrar){
                                $scope.cargarCatalogo('Localidad');
                            } 
                            if ($scope.catalogos.Ageb.Mostrar){                                
                                $scope.cargarCatalogo('Ageb');                              
                            } 
                        } 
                    }                         
                    
                    $scope.cargarSolicitudes = function () {           
                        $scope.loading = true;
                        _.each($scope.markers, function(m) {
                              m.setMap(null);
                        });
                        if ($scope.cluster!=null){
                            $scope.cluster.clearMarkers();
                           
                        } 
                        $scope.markers = [];
                        $http.post(baseUrl +'Solicitudes/ObtenerSolicitudes', {
                            PageIndex: 0,
                            PageSize: 0,
                            Inicio: $scope.Inicio,
                            Fin: $scope.Fin,
                            Valores: JSON.stringify($scope.valores)
                        }).then(function (response) {
                            $scope.loading = false;
                            var markerCluster=null;
                            $scope.totalcount = response.data.Total;
                            $scope.granTotal = response.data.GranTotal;
                            _.each(response.data.Solicitudes, function(solicitud) {
                                if (solicitud.latitud!=''&&solicitud.latitud!='0'){
                                    let latlon = {lat: parseFloat(solicitud.Latitud), lng: parseFloat(solicitud.Longitud)};
                                    let marker = new google.maps.Marker({
                                        position: latlon,
                                        map: $scope.map,
                                        url: baseUrl +"Solicitudes/VerSolicitud/"+solicitud.SolicitudId,
                                        title: solicitud.Beneficiario,
                                        });

                                    $scope.markers.push(marker);
                                    google.maps.event.addListener(marker, 'click', function() {
                                      window.location.href = marker.url;
                                    });
                                }
                            })
                            $scope.cluster = new MarkerClusterer($scope.map, $scope.markers,
                                { imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m' });

                            $scope.solicitudes = response.data.Solicitudes;
                            $scope.totalcount = response.data.Total;
                        });
                    };
                    
                    $scope.refreshSelect = _.debounce(function () {
                        $('.selectpicker2').selectpicker('refresh');
                    }, 200);                    
                }
            );
        })();
    </script>
}

@section Styles
    {
    <style>
        #map {
            height: 600px; /* The height is 400 pixels */
            width: 100%; /* The width is the width of the web page */
        }
        
        .col-4, .col-12{
            margin-bottom: 10px;        
        }
        
          .bootstrap-select .dropdown-menu{           
                max-width: 250px !important;
            }
    </style>
}